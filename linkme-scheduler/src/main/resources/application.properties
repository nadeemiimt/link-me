#spring.datasource.url=${JDBC_DATABASE_URL\:jdbc\:sqlserver\://localhost;databaseName\=linkmeNadeem}
#spring.datasource.username=${JDBC_DATABASE_USERNAME\:sa}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD\:JobsDB_Password}
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=linkmeNadeem;encrypt=true;trustServerCertificate=true;
spring.datasource.username=sa
spring.datasource.password=JobsDB_Password
spring.datasource.dbcp2.max-wait-millis=30000
spring.datasource.dbcp2.validation-query=select 1
spring.datasource.dbcp2.validation-query-timeout=30
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true

spring.docker.compose.lifecycle-management=start-only

es.host=localhost
es.port=9200
es.scheme=http

es.job.index=jobs
es.candidate.index=candidates


#spring.kafka.bootstrap-servers=localhost:9092
topic.scheduler.name=scheduler-topic
topic.scheduler.userJob.name=scheduler-user-job-topic
topic.scheduler.notification.name=scheduler-notification-topic

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# run every day at 09:00 AM
interval-in-cron=0 0 9 * * *

courier.api.url=https://api.courier.com/send
courier.api.token={{REPLACE WITH BRACKETS CORRECT TOKEN}}