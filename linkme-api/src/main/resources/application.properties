## MSSQL Config
#spring.datasource.url=${JDBC_DATABASE_URL\:jdbc\:sqlserver\://localhost;databaseName\=linkme}
#spring.datasource.username=${JDBC_DATABASE_USERNAME\:sa}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD\:JobsDB_Password}
#spring.datasource.dbcp2.max-wait-millis=30000
#spring.datasource.dbcp2.validation-query=select 1
#spring.datasource.dbcp2.validation-query-timeout=30
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.open-in-view=false
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=true

# MYSQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/db
spring.datasource.username=linkme-user
spring.datasource.password=linkme-password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

# Hibernate Configuration
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Container Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5

# Docker Configuration
spring.datasource.hikari.pool-name=SpringHikariCP
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

##This directs the data.sql file and help it to run
#spring.sql.init.data-locations=classpath:data.sql
#spring.jpa.defer-datasource-initialization=true

spring.docker.compose.lifecycle-management=start-only
springdoc.pathsToMatch=/api/**,/rest/auth/**

es.host=localhost
es.port=9200
es.scheme=http

es.job.index=jobs
es.candidate.index=candidates

es.seed.from.file=false


#spring.kafka.bootstrap-servers=localhost:9092
topic.job.name=job-topic
topic.candidate.name=candidate-topic
topic.salary.comparison.name=salary-comparison-topic

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

temp.file.io.key=HJSCW7Q.7VHB5W4-SMS4RTJ-KFAHNY3-GTRNPAF
file.io.url=https://file.io/


jwt.secret.key=mysecretkey

